{"version":3,"file":"static/js/439.3e2b5e40.chunk.js","mappings":"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","sources":["components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","components/ListSkeleton/ListSkeleton.jsx","components/UserCard/UserCard.styled.jsx","API/mockapiTest_API.js","components/UserCard/UserCard.jsx","components/UserCardList/UserCardList.styled.jsx","components/UserCardList/UserCardList.jsx","utils/constants/filterOptions.js","components/FilterUserCards/FilterUserCards.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import { Button } from 'components/GlobalStyle';\nimport styled from 'styled-components';\n\nexport const BackButtonStyled = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\nimport { BackButtonStyled } from './BackButton.styled';\n\nconst BackButton = ({ navigateTo }) => {\n  const navigate = useNavigate();\n  const onBackButtonClick = event => {\n    event.preventDefault();\n    navigate(navigateTo);\n  };\n  return (\n    <BackButtonStyled\n      type=\"button\"\n      className=\"backButton\"\n      title=\"Back to homepage\"\n      onClick={onBackButtonClick}\n    >\n      <RiArrowGoBackLine />\n      <span>Back</span>\n    </BackButtonStyled>\n  );\n};\nBackButton.propTypes = {\n  navigateTo: PropTypes.string.isRequired,\n};\n\nexport default BackButton;\n","import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nconst ListSkeleton = ({ count = 5 }) => {\n  return (\n    <SkeletonTheme baseColor=\"#202020\" highlightColor=\"#444\">\n      <p>\n        <Skeleton count={count} />\n      </p>\n    </SkeletonTheme>\n  );\n};\n\nexport default ListSkeleton;\n","import styled from 'styled-components';\nimport { theme } from 'utils/constants/theme';\nimport ellipse from '../../data/img/ellipse.png';\n\nexport const UserCardStyled = styled.li`\n  width: 100%;\n  max-width: 380px;\n  min-height: 460px;\n  padding: 28px 36px 36px;\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: ${theme.borderRadius.card};\n  background-color: ${theme.colors.accent2};\n  background-image: ${theme.gradients.userCard};\n  box-shadow: ${theme.shadows.card};\n\n  text-transform: uppercase;\n  text-align: center;\n  overflow: hidden;\n\n  & .userCard__logo {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n  }\n\n  & .userCard__tweetImg {\n    margin-bottom: 88px;\n  }\n\n  & .userCard__line {\n    position: absolute;\n    top: 39%;\n    left: 0;\n    transform: translate(0, -50%);\n    width: 100%;\n    height: 8px;\n\n    background-color: ${theme.colors.white};\n    box-shadow: ${theme.shadows.line};\n  }\n\n  & .userCard__ellipse {\n    position: absolute;\n    top: 39%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 80px;\n    height: 80px;\n    padding: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.violet};\n    background-image: url(${ellipse});\n  }\n\n  & .userCard__avatar {\n    object-fit: cover;\n  }\n\n  & .userCard__tweets,\n  & .userCard__followers {\n    ${theme.text(20, 24)}\n    font-weight: 500;\n    color: ${theme.colors.white};\n  }\n\n  & .userCard__tweets {\n    margin-bottom: 16px;\n  }\n\n  & .userCard__followers {\n    margin-bottom: 26px;\n  }\n\n  ${theme.media.tablet} {\n    width: 380px;\n\n    & .userCard__line {\n      top: 50%;\n    }\n\n    & .userCard__ellipse {\n      top: 50%;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst baseURL = 'https://6449822bb88a78a8f009cb4c.mockapi.io/api/tweetApp/';\naxios.defaults.baseURL = baseURL;\naxios.defaults.headers.patch['Access-Control-Allow-Headers'] =\n  'X-Requested-With,Content-Type,Cache-Control,access_token';\n\nexport const mockapiTest_API = {\n  getAllUsers: async () => {\n    const response = await axios.get('users');\n    return response.data;\n  },\n  editUser: async (userId, userData) => {\n    const response = await axios.put(`users/${userId}`, userData);\n    return response.data;\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserCardStyled } from './UserCard.styled';\nimport { mockapiTest_API } from 'API/mockapiTest_API';\nimport logo from '../../data/img/Logo.png';\nimport cardTweetImg from '../../data/img/userCardBg.png';\nimport userAvatar from '../../data/img/userAvatar.png';\nimport { Button } from 'components/GlobalStyle';\n\nconst UserCard = ({\n  user: { tweets, followers, user, avatar, id },\n  changeDisplayedUsers,\n}) => {\n  const storedFollowings = JSON.parse(\n    localStorage.getItem('following') ?? '[]'\n  );\n  const isIdStored = storedFollowings.indexOf(id) !== -1;\n  const [isFollowed, setIsFollowed] = useState(isIdStored);\n  const [followersNumber, setFollowersNumber] = useState(followers);\n\n  const onFollowButtonClick = async event => {\n    event.preventDefault();\n    //Follow\n    if (!isFollowed) {\n      setIsFollowed(true);\n\n      try {\n        await mockapiTest_API.editUser(id, {\n          tweets,\n          user,\n          avatar,\n          id,\n          followers: followersNumber + 1,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      setFollowersNumber(prev => ++prev);\n\n      localStorage.setItem(\n        'following',\n        JSON.stringify([\n          ...JSON.parse(localStorage.getItem('following') ?? '[]'),\n          id,\n        ])\n      );\n      changeDisplayedUsers({ id, action: 'follow' });\n    }\n\n    //Unfollow\n    if (isFollowed) {\n      setIsFollowed(false);\n      try {\n        await mockapiTest_API.editUser(id, {\n          tweets,\n          user,\n          avatar,\n          id,\n          followers: followersNumber - 1,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      setFollowersNumber(prev => --prev);\n      localStorage.setItem(\n        'following',\n        JSON.stringify(\n          JSON.parse(localStorage.getItem('following') ?? '[]').filter(\n            el => el !== id\n          )\n        )\n      );\n      changeDisplayedUsers({ id, action: 'unfollow' });\n    }\n  };\n\n  return (\n    <UserCardStyled className=\"userCard\">\n      <img src={logo} className=\"userCard__logo\" alt=\"logo\"></img>\n      <img\n        src={cardTweetImg}\n        className=\"userCard__tweetImg\"\n        alt=\" two\n        tweet\n        clouds\n        with\n        question\n        and\n        check\"\n      ></img>\n      <div className=\"userCard__line\"></div>\n\n      <div className=\"userCard__ellipse\" alt=\"ellipse around avatar\">\n        <img src={userAvatar} className=\"userCard__avatar\" alt=\"user avatar\" />\n      </div>\n\n      <p className=\"userCard__tweets\">{transformNumber(tweets)} tweets</p>\n      <p className=\"userCard__followers\">\n        {transformNumber(followersNumber)} followers\n      </p>\n      <Button\n        type=\"button\"\n        title=\"add user to followings\"\n        className=\"userCard__followButton\"\n        onClick={onFollowButtonClick}\n      >\n        {isFollowed ? 'Following' : 'Follow'}\n      </Button>\n    </UserCardStyled>\n  );\n};\n\nUserCard.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    user: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n  }).isRequired,\n  changeDisplayedUsers: PropTypes.func.isRequired,\n};\n\nexport default UserCard;\n\nfunction transformNumber(number) {\n  const stringNumber = String(number);\n  return number > 1000\n    ? `${stringNumber.slice(0, stringNumber.length - 3)},${stringNumber.slice(\n        -3\n      )}`\n    : `${stringNumber.slice(-3)}`;\n}\n","import styled from 'styled-components';\nimport { theme } from 'utils/constants/theme';\n\nexport const UserCardListStyled = styled.ul`\n  ${theme.flexCenterAndGap(25)}\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ListSkeleton from 'components/ListSkeleton/ListSkeleton';\nimport UserCard from 'components/UserCard';\nimport { UserCardListStyled } from './UserCardList.styled';\n\nconst UserCardList = ({ displayedUsers, changeDisplayedUsers, isLoading }) => {\n  if (isLoading) return <ListSkeleton />;\n  if (!isLoading && displayedUsers.length === 0) return <div>No users</div>;\n\n  if (!isLoading && displayedUsers.length > 0) {\n    return (\n      <UserCardListStyled className=\"userCardList\">\n        {displayedUsers.map(user => (\n          <UserCard\n            user={user}\n            changeDisplayedUsers={changeDisplayedUsers}\n            key={user.id}\n          />\n        ))}\n      </UserCardListStyled>\n    );\n  }\n};\n\nUserCardList.propTypes = {\n  displayedUsers: PropTypes.array.isRequired,\n  changeDisplayedUsers: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default UserCardList;\n","export const FILTER_OPTIONS = Object.freeze({\n  all: 'all',\n  follow: 'follow',\n  followings: 'followings',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTER_OPTIONS } from 'utils/constants/filterOptions';\n\nconst FilterUserCards = ({ onFilterChange, selectedFilter }) => {\n  function onFilterUserCardsChange(event) {\n    onFilterChange(event.target.value);\n  }\n  return (\n    <select\n      name=\"filter\"\n      className=\"filterUserCards\"\n      onChange={onFilterUserCardsChange}\n      defaultValue={selectedFilter}\n    >\n      <option value={FILTER_OPTIONS.all}>{FILTER_OPTIONS.all}</option>\n\n      <option value={FILTER_OPTIONS.follow}>{FILTER_OPTIONS.follow}</option>\n\n      <option value={FILTER_OPTIONS.followings}>\n        {FILTER_OPTIONS.followings}\n      </option>\n    </select>\n  );\n};\n\nFilterUserCards.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n\nexport default FilterUserCards;\n","import React, { useEffect, useState } from 'react';\n\nimport BackButton from 'components/BackButton';\nimport UserCardList from 'components/UserCardList';\nimport { Button, Container } from 'components/GlobalStyle';\nimport FilterUserCards from 'components/FilterUserCards/FilterUserCards';\nimport { FILTER_OPTIONS } from 'utils/constants/filterOptions';\nimport { mockapiTest_API } from 'API/mockapiTest_API';\n\nconst TweetsPage = () => {\n  const followingUsers = localStorage.getItem('following');\n\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState(users);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useState(FILTER_OPTIONS.all);\n  const [currentPage, setCurrentPage] = useState(0);\n  const cardsPerPage = 9;\n  let displayedUsers =\n    filteredUsers.length > cardsPerPage\n      ? filteredUsers.slice(0, cardsPerPage + cardsPerPage * currentPage)\n      : filteredUsers;\n\n  function onFilterChange(newFilter) {\n    setFilter(FILTER_OPTIONS[newFilter] ?? FILTER_OPTIONS.all);\n  }\n\n  function onLoadMoreBtnClick(event) {\n    event.preventDefault();\n    setCurrentPage(prev => ++prev);\n  }\n\n  function changeDisplayedUsers({ id, action }) {\n    setUsers(prev =>\n      prev.map(user => {\n        if (user.id !== id) return user;\n        const followers = user.followers;\n        if (action === 'follow') user.followers = followers + 1;\n        if (action === 'unfollow') user.followers = followers - 1;\n        return user;\n      })\n    );\n\n    displayedUsers = displayedUsers.filter(\n      displayedUser => displayedUser.id !== id\n    );\n  }\n\n  useEffect(() => {\n    const getUsers = async () => {\n      setIsLoading(true);\n      const response = await mockapiTest_API.getAllUsers();\n      setUsers(response);\n\n      setIsLoading(false);\n      return response;\n    };\n    try {\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case FILTER_OPTIONS.follow:\n        setFilteredUsers(\n          users.filter(user => followingUsers.indexOf(user.id) === -1)\n        );\n        break;\n      case FILTER_OPTIONS.followings:\n        setFilteredUsers(\n          users.filter(user => followingUsers.indexOf(user.id) !== -1)\n        );\n        break;\n      case FILTER_OPTIONS.all:\n        setFilteredUsers(users);\n        break;\n      default:\n        throw new Error('Wrong filter option!');\n    }\n  }, [filter, followingUsers, users]);\n\n  return (\n    <Container>\n      TweetsPage\n      <BackButton navigateTo=\"/\" />\n      <FilterUserCards\n        onFilterChange={onFilterChange}\n        selectedFilter={filter}\n      />\n      <UserCardList\n        displayedUsers={displayedUsers}\n        changeDisplayedUsers={changeDisplayedUsers}\n        isLoading={isLoading}\n      />\n      {filteredUsers.length > cardsPerPage && (\n        <Button\n          type=\"button\"\n          className=\"useCardList__loadMoreBtn\"\n          onClick={onLoadMoreBtnClick}\n        >\n          Load more\n        </Button>\n      )}\n    </Container>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["BackButtonStyled","styled","Button","navigateTo","navigate","useNavigate","type","className","title","onClick","event","preventDefault","count","baseColor","highlightColor","UserCardStyled","theme","axios","mockapiTest_API","getAllUsers","response","data","editUser","userId","userData","user","tweets","followers","avatar","id","changeDisplayedUsers","isIdStored","JSON","parse","localStorage","getItem","indexOf","useState","isFollowed","setIsFollowed","followersNumber","setFollowersNumber","onFollowButtonClick","console","log","prev","setItem","stringify","action","filter","el","src","alt","cardTweetImg","transformNumber","number","stringNumber","String","slice","length","UserCardListStyled","displayedUsers","isLoading","map","FILTER_OPTIONS","Object","freeze","all","follow","followings","onFilterChange","selectedFilter","name","onChange","target","value","defaultValue","followingUsers","users","setUsers","filteredUsers","setFilteredUsers","setIsLoading","setFilter","currentPage","setCurrentPage","useEffect","getUsers","error","Error","newFilter","displayedUser"],"sourceRoot":""}